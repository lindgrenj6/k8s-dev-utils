apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
  creationTimestamp: null
  generation: 1
  labels:
    app: catalog-api
  name: catalog-api-minion-approval
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: catalog-api-minion-approval
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: catalog-api
        name: catalog-api-minion-approval
      name: catalog-api-minion-approval
    spec:
      containers:
      - command:
        - bin/catalog-api-approval-minion
        env:
        - name: QUEUE_HOST
          value: platform-mq-ci-kafka-bootstrap.platform-mq-ci.svc
        - name: CATALOG_HOST
          value: catalog-api
        - name: CATALOG_PORT
          value: "3000"
        - name: CATALOG_SCHEME
          value: http
        - name: LOG_TO_STDOUT
          value: "true"
        - name: APPROVAL_PERSIST_REF
          value: test-approval-persist-ref
        image: docker-registry.default.svc:5000/buildfactory/catalog-api-minion:latest
        imagePullPolicy: Always
        name: catalog-api-minion-approval
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
  creationTimestamp: null
  generation: 1
  labels:
    app: catalog-api
  name: catalog-api-minion-task
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: catalog-api-minion-task
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: catalog-api
        name: catalog-api-minion-task
      name: catalog-api-minion-task
    spec:
      containers:
      - command:
        - bin/catalog-api-task-minion
        env:
        - name: QUEUE_HOST
          value: platform-mq-ci-kafka-bootstrap.platform-mq-ci.svc
        - name: CATALOG_HOST
          value: catalog-api
        - name: CATALOG_PORT
          value: "3000"
        - name: CATALOG_SCHEME
          value: http
        - name: LOG_TO_STDOUT
          value: "true"
        - name: TASK_PERSIST_REF
          value: test-task-persist-ref
        image: docker-registry.default.svc:5000/buildfactory/catalog-api-minion:latest
        imagePullPolicy: Always
        name: catalog-api-minion-task
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
